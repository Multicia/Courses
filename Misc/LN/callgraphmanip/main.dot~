digraph G {
rankdir=LR
trim -> lo;
trim -> hi;
indexConvert;
getpoints;
energy -> stats;
_checkDictionary;
one;
randomC;
any;
neighbourhood -> neighr;
lo;
neighr;
extrapolate -> trim;
extrapolate -> lo;
extrapolate -> hi;
generateNew -> gone;
generateNew -> gon;
generateNew -> gosw;
generateNew -> goe;
generateNew -> thresholdCheck;
generateNew -> _checkDictionary;
generateNew -> extrapolateCheck;
generateNew -> wrapperInterpolate;
generateNew -> gonw;
generateNew -> gose;
generateNew -> wrapperextrapolate;
generateNew -> gow;
generateNew -> interpolateCheck;
generateNew -> generateSlot;
generateNew -> gos;
_wrappercheckdirection -> _checkdirection;
main -> searcher [penwidth=3];
main -> printNormal;
main -> _checkDictionary;
wrapperextrapolate -> trim;
wrapperextrapolate -> getpoints;
wrapperextrapolate -> lo;
wrapperextrapolate -> one;
wrapperextrapolate -> extrapolate;
wrapperextrapolate -> hi;
opposite;
printNormal -> thresholdCheck;
printNormal -> energy;
interpolate -> trim;
interpolate -> lo;
interpolate -> hi;
hi;
interpolateCheck -> gone;
interpolateCheck -> gon;
interpolateCheck -> gosw;
interpolateCheck -> goe;
interpolateCheck -> thresholdCheck;
interpolateCheck -> gonw;
interpolateCheck -> gose;
interpolateCheck -> gow;
interpolateCheck -> gos;
searcher -> energy;
searcher -> randomC;
searcher -> listofneighbours;
searcher -> generateNew;
searcher -> randomcell;
randomcell -> randomC;
_checkdirection -> gone;
_checkdirection -> gon;
_checkdirection -> gosw;
_checkdirection -> goe;
_checkdirection -> gonw;
_checkdirection -> gose;
_checkdirection -> gow;
_checkdirection -> gos;
wrapperInterpolate -> trim;
wrapperInterpolate -> getpoints;
wrapperInterpolate -> lo;
wrapperInterpolate -> interpolate;
wrapperInterpolate -> one;
wrapperInterpolate -> hi;
thresholdCheck;
extrapolateCheck -> gone;
extrapolateCheck -> gon;
extrapolateCheck -> gosw;
extrapolateCheck -> goe;
extrapolateCheck -> thresholdCheck;
extrapolateCheck -> gonw;
extrapolateCheck -> gose;
extrapolateCheck -> gow;
extrapolateCheck -> gos;
listofneighbours -> gone;
listofneighbours -> gon;
listofneighbours -> gosw;
listofneighbours -> goe;
listofneighbours -> gonw;
listofneighbours -> gose;
listofneighbours -> gow;
listofneighbours -> gos;
}
